{"version":3,"sources":["App.module.css","Components/Task/Task.tsx","Components/AddItemForm/AddItemForm.tsx","store/tasks-reducer.ts","Components/Todolist/Todolist.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx","Components/Todolist/Todolist.module.css","Components/Task/Task.module.css"],"names":["module","exports","Task","props","useState","remove","setRemove","className","s","task","onMouseEnter","onMouseLeave","type","isDone_input","checked","isDone","onChange","changeTaskStatus","id","is_done","title","remove_button","onClick","removeTask","AddItemForm","setTitle","placeholder","value","e","currentTarget","onKeyPress","charCode","addItem","initialState","Todolist","dispatch","useDispatch","tasks","useSelector","state","todolist_section","header","addTaskAC","tasks_list","map","t","taskId","length","footer","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","stateCopy","filter","v1","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ff50a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__29g1Z\",\"title\":\"App_title__3rsy1\"};","import React, {useState} from 'react'\r\nimport s from './Task.module.css';\r\nimport {TaskType} from '../Todolist/Todolist'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    removeTask: (taskId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean) => void\r\n}\r\n\r\nexport const Task = (props: TaskPropsType) => {\r\n    let [remove, setRemove] = useState(true)\r\n\r\n    return <div className={s.task}\r\n                onMouseEnter={() => setRemove(true)}\r\n                onMouseLeave={() => setRemove(true)}>\r\n\r\n        <input type=\"checkbox\"\r\n               className={s.isDone_input}\r\n               checked={props.task.isDone}\r\n               onChange={() => props.changeTaskStatus(props.task.id, props.task.isDone)}/>\r\n        <span className={props.task.isDone ? s.is_done : ''}>{props.task.title}</span>\r\n        {\r\n            remove &&\r\n            <button className={s.remove_button} onClick={() => props.removeTask(props.task.id)}>\r\n                Ã—\r\n            </button>\r\n        }\r\n\r\n    </div>\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = (props: AddItemFormPropsType) => {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n\r\n    const addItem = () => {\r\n        props.addItem(title);\r\n        setTitle(\"\");\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n    return <input type=\"text\"\r\n                  placeholder={'What needs to be done?'}\r\n                  value={title} onChange={onChangeHandler}\r\n                  onKeyPress={onKeyPressHandler}/>\r\n\r\n}\r\n","import {v1} from \"uuid\";\r\nimport {TasksStateType, TaskType} from \"../Components/Todolist/Todolist\";\r\n\r\n\r\ntype ActionType =\r\n    RemoveTaskActionType\r\n    | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n\r\nexport type RemoveTaskActionType = {  type: 'REMOVE-TASK', taskId: string }\r\n\r\nexport type AddTaskActionType = { type: 'ADD-TASK', title: string}\r\n\r\nexport type ChangeTaskStatusActionType = { type: 'CHANGE-TASK-STATUS', taskId: string, isDone: boolean }\r\n\r\n\r\nconst initialState: TasksStateType = []\r\n\r\n\r\nexport const tasksReducer = (state = initialState, action: ActionType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            let stateCopy = [...state]\r\n            let tasks = stateCopy\r\n            stateCopy = tasks.filter((t: TaskType) => t.id !== action.taskId);\r\n\r\n            return stateCopy\r\n        }\r\n        case 'ADD-TASK': {\r\n            let task: TaskType = {id: v1(), title: action.title, isDone: false}\r\n            let stateCopy = [...state]\r\n            stateCopy = [task, ...stateCopy]\r\n            return stateCopy\r\n        }\r\n\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let stateCopy =[...state]\r\n            let tasks = stateCopy\r\n            stateCopy = tasks.map( (t: TaskType) => t.id === action.taskId ? {...t, isDone: action.isDone} : t)\r\n            return stateCopy\r\n        }\r\n        default:\r\n\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const removeTaskAC = (taskId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId}\r\n}\r\nexport const addTaskAC = (title: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title: title}\r\n}\r\n\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean): ChangeTaskStatusActionType => {\r\n    return {\r\n        type: \"CHANGE-TASK-STATUS\",\r\n        taskId: taskId,\r\n        isDone: isDone\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Todolist.module.css';\r\nimport {Task} from \"../Task/Task\";\r\nimport {AddItemForm} from \"../AddItemForm/AddItemForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from '../../store/store';\r\nimport {addTaskAC, changeTaskStatusAC, removeTaskAC} from \"../../store/tasks-reducer\";\r\n\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type TasksStateType = Array<TaskType>\r\n\r\n\r\nexport const Todolist = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector<AppRootState, Array<TaskType>>(state => state.tasks)\r\n\r\n\r\n    return <div className={s.todolist_section}>\r\n        <div className={s.header}>\r\n            <AddItemForm addItem={(title) => dispatch(addTaskAC(title))}/>\r\n        </div>\r\n        <div className={s.tasks_list}>\r\n            {\r\n                tasks.map(t => {\r\n                        return <Task key={t.id}\r\n                                     task={t}\r\n                                     removeTask={() => dispatch(removeTaskAC(t.id))}\r\n                                     changeTaskStatus={() => dispatch(changeTaskStatusAC(t.id, !t.isDone))}/>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n\r\n        {tasks.length > 0 &&\r\n        <div className={s.footer}>\r\n            {tasks.length} items lefts\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n}","import React from 'react';\nimport s from './App.module.css';\nimport {Todolist} from \"./Components/Todolist/Todolist\";\n\nfunction App() {\n  return (\n      <div className={s.app}>\n          <h1 className={s.title}>Todos</h1>\n        <Todolist/>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {tasksReducer} from \"./tasks-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    tasks: tasksReducer\r\n})\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist_section\":\"Todolist_todolist_section__1Ya9p\",\"header\":\"Todolist_header__3uf09\",\"tasks_list\":\"Todolist_tasks_list__1nWGu\",\"footer\":\"Todolist_footer__1lSCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__3J0x4\",\"is_done\":\"Task_is_done__IPOe9\",\"remove_button\":\"Task_remove_button__2Pl_q\",\"isDone_input\":\"Task_isDone_input__3sRKX\"};"],"sourceRoot":""}